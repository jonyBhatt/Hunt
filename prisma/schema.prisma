// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserEnum {
  MENTOR
  USER
  ADMIN
}

model User {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  username        String   @unique
  email           String   @unique
  password        String
  role            UserEnum @default(USER)
  hasNotification Boolean?
  following       String[] @db.ObjectId
  onboard         Boolean  @default(false)
  isBan           Boolean  @default(false)

  createdAt DateTime? @default(now())
  updateAt  DateTime? @default(now())

  posts         Post[]
  comments      Comment[]
  notifications Notification[]
}

model Mentor {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  firstname String
  lastname  String
  email     String  @unique
  bio       String
  imageUrl  String?
  subject   String
  skills    String

  isLive Boolean @default(false)

  role UserEnum @default(MENTOR)

  created_At DateTime @default(now())
  updated_At DateTime @default(now())
}

model Post {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  likes       String[] @db.ObjectId
  imageUrl    String

  categoryName String
  category     Category? @relation(fields: [categoryName], references: [name])

  authorEmail String
  author      User   @relation(fields: [authorEmail], references: [email])

  comments Comment[]

  created_At DateTime @default(now())
  updated_At DateTime @default(now())
}

model Category {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String @unique
  posts Post[]
}

model Comment {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  content String
  userId  String @db.ObjectId
  user    User   @relation(fields: [userId], references: [id])
  postId  String @db.ObjectId
  post    Post   @relation(fields: [postId], references: [id])
}

model Notification {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  body String

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
}
